from manim import *
from catppuccin import PALETTE

mocha = PALETTE.mocha.colors
macchiato = PALETTE.macchiato.colors
frappe = PALETTE.frappe.colors
latte = PALETTE.latte.colors

class five_shortcut(Scene):
    def construct(self):
        t = Text("The Shortcut for Multiplying by 5").set_color(mocha.text.hex).shift(UP)
        ta = Text("Example 1:").set_color(mocha.text.hex).shift(UP)
        a = MathTex(r"46\times5", color=mocha.text.hex)
        tb = Text("If It Is Even, Divide by 2").set_color(mocha.text.hex).shift(UP)
        b = MathTex(r"\frac{46}{2}", color=mocha.text.hex)
        c = MathTex(r"23", color=mocha.text.hex)
        td = Text("Add a 0 To the End").set_color(mocha.text.hex).shift(UP)
        d = MathTex(r"230", color=mocha.text.hex)
        e = MathTex(r"46\times5=230", color=mocha.text.hex)
        f = Text("Example 2:").set_color(mocha.text.hex).shift(UP)
        g = MathTex(r"51\times5", color=mocha.text.hex)
        fg = Text("If It Is Odd, Subtract 1").set_color(mocha.text.hex).shift(UP)
        h = MathTex(r"51-1", color=mocha.text.hex)
        i = MathTex(r"50", color=mocha.text.hex)
        fi = Text("Divide by 2").set_color(mocha.text.hex).shift(UP)
        j = MathTex(r"\frac{50}{2}", color=mocha.text.hex)
        k = MathTex(r"25", color=mocha.text.hex)
        fk = Text("Add a 5 To the End").set_color(mocha.text.hex).shift(UP)
        l = MathTex(r"255", color=mocha.text.hex)
        m = MathTex(r"51\times5=255", color=mocha.text.hex)
        n = Text("The Shortcut for Multiplying by 5").set_color(mocha.text.hex)

        self.play(Write(t))
        self.wait(1)
        self.play(Transform(t, a))
        self.wait(1)
        self.play(Write(ta))
        self.wait(1)
        self.play(Unwrite(ta))
        self.wait(1)
        self.play(Write(tb))
        self.wait(1)
        self.play(Transform(t, b))
        self.play(Unwrite(tb))
        self.play(Transform(t, c))
        self.wait(1)
        self.play(Write(td))
        self.wait(1)
        self.play(Transform(t, d))
        self.play(Unwrite(td))
        self.wait(1)
        self.play(Transform(t, e))
        self.wait(5)
        self.play(Unwrite(t))
        self.play(Write(f))
        self.wait(1)
        self.play(Transform(f, g))
        self.wait(1)
        self.play(Write(fg))
        self.wait(1)
        self.play(Transform(f, h))
        self.play(Unwrite(fg))
        self.wait(1)
        self.play(Transform(f, i))
        self.wait(1)
        self.play(Write(fi))
        self.wait(1)
        self.play(Transform(f, j))
        self.play(Unwrite(fi))
        self.wait(1)
        self.play(Transform(f, k))
        self.wait(1)
        self.play(Write(fk))
        self.wait(1)
        self.play(Transform(f, l))
        self.play(Unwrite(fk))
        self.wait(1)
        self.play(Transform(f, m))
        self.wait(1)

        e_copy = e.copy().to_edge(LEFT)
        self.play(Transform(f, e_copy))

        e_to_m = e_copy.copy().to_edge(LEFT)
        self.play(Transform(e_to_m, m.copy().to_edge(RIGHT)))

        m_to_n = e_to_m.copy().to_edge(RIGHT)
        self.play(Transform(m_to_n, n.copy().to_edge(UP)))

        self.wait(5)
        self.play(Unwrite(e_copy), Unwrite(e_to_m), Unwrite(m_to_n), Unwrite(f))